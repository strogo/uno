<Project Sdk="MSBuild.Sdk.Extras" ToolsVersion="15.0">
	<PropertyGroup>
		<TargetFrameworks>xamarinmac20;MonoAndroid90;xamarinios10;net461;netstandard2.0</TargetFrameworks>
		<TargetFrameworksCI>MonoAndroid90;xamarinios10;net461;netstandard2.0;xamarinmac20</TargetFrameworksCI>
	</PropertyGroup>

	<PropertyGroup Condition="'$(UnoTargetFrameworkOverride)'!=''">
		<TargetFrameworks>$(UnoTargetFrameworkOverride)</TargetFrameworks>
	</PropertyGroup>

	<PropertyGroup>
		<AssemblyName>Uno.UI</AssemblyName>
		<RootNamespace>Uno.UI</RootNamespace>
		<DefineConstants>$(DefineConstants);IS_UNO</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<BuildForLiveUnitTesting>false</BuildForLiveUnitTesting>
		<NoWarn>$(NoWarn);NU1701</NoWarn>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>

		<ProduceReferenceAssembly>false</ProduceReferenceAssembly>
		<Deterministic>true</Deterministic>

		<T4Path>..\T4Generator\bin\$(Configuration)</T4Path>
		<T4Bin>$(T4Path)\T4Generator.exe</T4Bin>
		<AndroidUseIntermediateDesignerFile>True</AndroidUseIntermediateDesignerFile>
		<AndroidResgenFile>obj\$(TargetFramework)\Resources\Resource.Designer.cs</AndroidResgenFile>

		<!-- Ensures the .xr.xml files are generated in a proper layout folder -->
		<GenerateLibraryLayout>true</GenerateLibraryLayout>

		<!-- Force the generation of upri files for Uno.UI self localization -->
		<UnoForceProcessPRIResource>true</UnoForceProcessPRIResource>

		<!-- Generate automation IDs in debug builds, use by UI tests. -->
    <IsUiAutomationMappingEnabled Condition="'$(Configuration)'=='Debug'">true</IsUiAutomationMappingEnabled>
  </PropertyGroup>

	<Import Project="..\Uno.CrossTargetting.props" />

	<ItemGroup>
		<UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml;" Visible="False" />
		<UpToDateCheckInput Include="**\*.cs" Exclude="bin\**\*.cs;obj\**\*.cs;" Visible="False" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="Mixins\**\*.cs" />
		<None Include="Mixins\**\*.cs" />

		<Compile Include="Mixins\Android\BaseActivity.Callbacks.g.cs" Condition="$(IsMonoAndroid)">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>BaseActivity.Callbacks.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\Android\FrameworkElementMixins.g.cs" Condition="$(IsMonoAndroid)">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>FrameworkElementMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\Android\VisualStatesMixins.g.cs" Condition="$(IsMonoAndroid)">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>VisualStatesMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\DependencyPropertyMixins.g.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>DependencyPropertyMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\macOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinMac)">
			<DependentUpon>FrameworkElementMixins.tt</DependentUpon>
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Mixins\macOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinMac)">
			<DependentUpon>VisualStatesMixins.tt</DependentUpon>
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Mixins\iOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinIOS)">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>FrameworkElementMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\iOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinIOS)">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>VisualStatesMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\net461\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='net461'">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>VisualStatesMixins.tt</DependentUpon>
		</Compile>
		<Compile Include="Mixins\Wasm\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='netstandard2.0'">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>VisualStatesMixins.tt</DependentUpon>
		</Compile>
	</ItemGroup>

	<Choose>
		<When Condition="'$(TargetFramework)'=='net461'">
			<ItemGroup>
				<None Include="$(MSBuildThisFileDirectory)**/*.xaml" Exclude="bin/**/*.xaml;obj/**/*.xaml" />
				<Page Remove="@(Page)" />
			</ItemGroup>
			<ItemGroup Condition="'$(BuildingInsideUnoSourceGenerator)'!=''">
				<Page Include="$(MSBuildThisFileDirectory)**/*.xaml" Exclude="bin/**/*.xaml;obj/**/*.xaml" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<None Include="$(MSBuildThisFileDirectory)**/*.xaml" Exclude="bin/**/*.xaml;obj/**/*.xaml" />

				<!-- remove files included by msbuild extras -->
				<Page Remove="@(Page)" />
				<Page Include="$(MSBuildThisFileDirectory)**/*.xaml" Exclude="bin/**/*.xaml;obj/**/*.xaml" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
		<None Include="Extensions\CGSizeExtensions.iOSmacOS.cs" />
		<None Include="Resources\AboutResources.txt" />
		<None Include="Resources\Values\Attrs.xml" />
		<None Include="Resources\Values\Styles.xml" />
	</ItemGroup>

	<ItemGroup>
		<None Include="Mixins\Android\BaseActivity.Callbacks.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>BaseActivity.Callbacks.g.cs</LastGenOutput>
		</None>
		<None Include="Mixins\Android\FrameworkElementMixins.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>FrameworkElementMixins.g.cs</LastGenOutput>
		</None>
		<None Include="Mixins\Android\VisualStatesMixins.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
		</None>
		<None Include="Mixins\DependencyPropertyMixins.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DependencyPropertyMixins.g.cs</LastGenOutput>
		</None>
		<None Include="Mixins\iOS\FrameworkElementMixins.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>FrameworkElementMixins.g.cs</LastGenOutput>
		</None>
		<None Include="Mixins\iOS\VisualStatesMixins.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
		</None>
		<None Include="Resources\IResourceRegistry.cs" />
		<None Include="Resources\ResourceRegistry.cs" />
		<None Include="UI\Xaml\Controls\Panel\Panel.macOS.cs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Uno.SourceGenerationTasks" Version="2.0.0-dev.304" />
		<PackageReference Include="Uno.Core" Version="2.0.0-dev.5" />
		<PackageReference Include="Uno.Core.Build" Version="2.0.0-dev.5" />
		<PackageReference Include="Uno.MonoAnalyzers" Version="1.0.0-dev.4">
		  <PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="System.Memory" Version="4.5.2" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'MonoAndroid90'">
		<PackageReference Include="Xamarin.Android.Support.v4" Version="28.0.0.1">
			<PrivateAssets>none</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Xamarin.Android.Support.v7.AppCompat" Version="28.0.0.1">
			<PrivateAssets>none</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Xamarin.Android.Support.v7.RecyclerView" Version="28.0.0.1">
			<PrivateAssets>none</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="xamarin.build.download" Version="0.4.11" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Uno.Foundation\Uno.Foundation.csproj">
			<TreatAsPackageReference>false</TreatAsPackageReference>
		</ProjectReference>
		<ProjectReference Include="..\Uno.UWP\Uno.csproj">
			<TreatAsPackageReference>false</TreatAsPackageReference>
		</ProjectReference>
		<ProjectReference Include="..\SourceGenerators\System.Xaml\Uno.Xaml.csproj" />
		<ProjectReference Include="..\Uno.UI.BindingHelper.Android\Uno.UI.BindingHelper.Android.csproj" Condition="'$(TargetFramework)' == 'MonoAndroid90'">
			<TreatAsPackageReference>false</TreatAsPackageReference>
		</ProjectReference>
	</ItemGroup>

	<ItemGroup Condition="$(IsMonoAndroid) or $(IsXamarinIOS) or $(IsXamarinMac)">
		<Reference Include="System.Numerics" />
		<Reference Include="System.Numerics.Vectors" />
		<Reference Include="System.json" />
		<Reference Include="System.Memory" />
	</ItemGroup>

	<ItemGroup>
		<MixinInput Include=".\Mixins\Android\BaseActivity.Callbacks.tt" Condition="$(IsMonoAndroid)" />
		<MixinInput Include=".\Mixins\Android\FrameworkElementMixins.tt" Condition="$(IsMonoAndroid)" />
		<MixinInput Include=".\Mixins\Android\VisualStatesMixins.tt" Condition="$(IsMonoAndroid)" />
		<MixinInput Include=".\Mixins\DependencyPropertyMixins.tt" />
		<MixinInput Include=".\UI\Xaml\DependencyPropertiesImplementation.tt" />
		<MixinInput Include=".\UI\Xaml\Controls\VisualStatesImplementation.tt" />
		<MixinInput Include=".\UI\Xaml\IFrameworkElementImplementation.Android.tt" Condition="$(IsMonoAndroid)" />
		<MixinInput Include=".\Mixins\iOS\FrameworkElementMixins.tt" Condition="$(IsXamarinIOS)" />
		<MixinInput Include=".\Mixins\iOS\VisualStatesMixins.tt" Condition="$(IsXamarinIOS)" />
		<MixinInput Include=".\Mixins\macOS\FrameworkElementMixins.tt" Condition="$(IsXamarinMac)" />
		<MixinInput Include=".\Mixins\macOS\VisualStatesMixins.tt" Condition="$(IsXamarinMac)" />
		<MixinInput Include=".\Mixins\Wasm\VisualStatesMixins.tt" Condition="'$(TargetFramework)'=='netstandard2.0'" />
		<MixinInput Include=".\Mixins\net461\VisualStatesMixins.tt" Condition="'$(TargetFramework)'=='net461'" />
		<MixinInput Include=".\UI\Xaml\IFrameworkElementImplementation.iOS.tt" Condition="$(IsXamarinIOS)" />
		<MixinInput Include=".\UI\Xaml\IFrameworkElementImplementation.macOS.tt" Condition="$(IsXamarinMac)" />

		<MixinOutput Include=".\Mixins\Android\BaseActivity.Callbacks.g.cs" Condition="$(IsMonoAndroid)" />
		<MixinOutput Include=".\Mixins\Android\FrameworkElementMixins.g.cs" Condition="$(IsMonoAndroid)" />
		<MixinOutput Include=".\Mixins\Android\VisualStatesMixins.g.cs" Condition="$(IsMonoAndroid)" />
		<MixinOutput Include=".\Mixins\DependencyPropertyMixins.g.cs" />
		<MixinOutput Include=".\Mixins\iOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinIOS)" />
		<MixinOutput Include=".\Mixins\iOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinIOS)" />
		<MixinOutput Include=".\Mixins\macOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinMac)" />
		<MixinOutput Include=".\Mixins\macOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinMac)" />
		<MixinOutput Include=".\Mixins\Wasm\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='netstandard2.0'" />
		<MixinOutput Include=".\Mixins\net461\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='net461'" />
	</ItemGroup>

	<!--
	DispatchToInnerBuilds is used for direct builds, CoreCompile/_UnoSourceGenerator is for 
	project dependency induced builds.
	-->
	<Target Name="GenerateMixins" Inputs="@(MixinInput)" Outputs="@(MixinOutput)" BeforeTargets="DispatchToInnerBuilds;Build;_UnoSourceGenerator" DependsOnTargets="_OptimizeT4Generator" Condition="'$(DesignTimeBuild)' != 'true'">

		<ItemGroup>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
				<Properties>InputFile=.\Mixins\Android\BaseActivity.Callbacks.tt;OutputPath=.\Mixins\Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
				<Properties>InputFile=.\Mixins\Android\FrameworkElementMixins.tt;OutputPath=.\Mixins\Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
				<Properties>InputFile=.\Mixins\Android\VisualStatesMixins.tt;OutputPath=.\Mixins\Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)">
				<Properties>InputFile=.\Mixins\DependencyPropertyMixins.tt;OutputPath=.\Mixins;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinIOS)">
				<Properties>InputFile=.\Mixins\iOS\FrameworkElementMixins.tt;OutputPath=.\Mixins\iOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinIOS)">
				<Properties>InputFile=.\Mixins\iOS\VisualStatesMixins.tt;OutputPath=.\Mixins\iOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinMac)">
				<Properties>InputFile=.\Mixins\macOS\FrameworkElementMixins.tt;OutputPath=.\Mixins\macOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinMac)">
				<Properties>InputFile=.\Mixins\macOS\VisualStatesMixins.tt;OutputPath=.\Mixins\macOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="'$(TargetFramework)'=='netstandard2.0'">
				<Properties>InputFile=.\Mixins\Wasm\VisualStatesMixins.tt;OutputPath=.\Mixins\Wasm;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
			<MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="'$(TargetFramework)'=='net461'">
				<Properties>InputFile=.\Mixins\net461\VisualStatesMixins.tt;OutputPath=.\Mixins\net461;Configuration=$(Configuration);Platform=$(Platform)</Properties>
			</MixinDefinition>
    </ItemGroup>

		<Message Text="Generating mixins" Importance="high" />

		<!-- This allows for the mixins to generate in parallel -->
		<MSBuild BuildInParallel="true" Projects="@(MixinDefinition)" StopOnFirstFailure="True" Targets="_InnerGenerateMixins" />
	</Target>

	<Target Name="_OptimizeT4Generator" Condition="$([MSBuild]::IsOSUnixLike())">
		<ItemGroup>
			<_T4AOTFiles Include="$(T4Path)/*.dll" Exclude="$(T4Path)/System.Text.Encoding.CodePages.dll" />
		</ItemGroup>
		
		<Exec ContinueOnError="WarnAndContinue" Command="mono --aot &quot;$(T4Bin)&quot;" Condition="!exists('$(T4Bin).dylib')" />
		<Exec ContinueOnError="WarnAndContinue" Command="mono --aot &quot;%(_T4AOTFiles.Identity)&quot;" Condition="!exists('%(_T4AOTFiles.Identity).dylib')" />
	</Target>

	<Target Name="_InnerGenerateMixins">
		<Exec Command="&quot;$(T4Bin)&quot; $(InputFile) $(OutputPath)" />
	</Target>

	<ItemGroup Condition="'$(TargetFramework)'=='net461'">
		<!-- Remove the reference added automatically by msbuild extras -->
		<Reference Remove="PresentationFramework" />
		<Reference Remove="PresentationCore" />
		<Reference Remove="WindowsBase" />
		<Reference Remove="System.Xaml" />
	</ItemGroup>

	<PropertyGroup>
		<UnoUIGeneratorsBinPath>$(MSBuildThisFileDirectory)..\SourceGenerators\Uno.UI.SourceGenerators\bin\$(Configuration)</UnoUIGeneratorsBinPath>
		<UnoUIMSBuildTasksPath>$(MSBuildThisFileDirectory)..\SourceGenerators\Uno.UI.Tasks\bin\$(Configuration)_Shadow</UnoUIMSBuildTasksPath>
	</PropertyGroup>

	<Import Project="..\SourceGenerators\Uno.UI.SourceGenerators\Content\Uno.UI.SourceGenerators.props" />
	<Import Project="..\SourceGenerators\Uno.UI.Tasks\Content\Uno.UI.Tasks.targets" Condition="'$(SkipUnoResourceGeneration)' == '' " />

	<ItemGroup>
		<Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Mixins\Wasm\" />
		<Folder Include="UI\Xaml\Maps\Presenters\" />
	</ItemGroup>

	<ItemGroup>
		<PRIResource Include="**\*.resw" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
		<EmbeddedResource Include="LinkerDefinition.Wasm.xml">
			<LogicalName>Uno.UI.xml</LogicalName>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup Condition="'$(DocsGeneration)'==''">
		<ProjectReference Include="..\SourceGenerators\Uno.UI.SourceGenerators\Uno.UI.SourceGenerators.csproj">
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
			<SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
			<UndefineProperties>TargetFramework</UndefineProperties>
		</ProjectReference>
		<ProjectReference Include="..\SourceGenerators\Uno.UI.Tasks\Uno.UI.Tasks.csproj">
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
			<SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
			<UndefineProperties>TargetFramework</UndefineProperties>
		</ProjectReference>
		<ProjectReference Include="..\T4Generator\T4Generator.csproj">
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
			<SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
			<UndefineProperties>TargetFramework</UndefineProperties>
		</ProjectReference>
	</ItemGroup>

	<ItemGroup>
	  <None Update="BaseActivity.Callbacks.Implementation.Android.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>BaseActivity.Callbacks.Implementation.Android.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\Android\FrameworkElementMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>FrameworkElementMixins.g.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\Android\VisualStatesMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\macOS\FrameworkElementMixins.g.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>FrameworkElementMixins.tt</DependentUpon>
	  </None>
	  <None Update="Mixins\macOS\FrameworkElementMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>FrameworkElementMixins.g.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\macOS\VisualStatesMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\net461\VisualStatesMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
	  </None>
	  <None Update="Mixins\Wasm\VisualStatesMixins.tt">
	    <Generator>TextTemplatingFileGenerator</Generator>
	    <LastGenOutput>VisualStatesMixins.g.cs</LastGenOutput>
	  </None>
	</ItemGroup>

	<Target Name="GetPackagingOutputs" Condition=" '$(TargetFramework)' == 'uap10.0' " />

	<Target Name="GetBuiltProjectOutputRecursive" Condition=" '$(TargetFramework)' == 'xamarinios10' " />
	<Target Name="GetTargetPath" Condition=" '$(TargetFramework)' == 'xamarinios10' " />
	<Target Name="GetNativeManifest" Condition=" '$(TargetFramework)' == 'xamarinios10' " />

	<Target Name="GetBuiltProjectOutputRecursive" Condition=" '$(TargetFramework)' == 'xamarinios10' " />

	<Target Name="VS16Mac_RemoveSystemMemory" BeforeTargets="ResolveAssemblyReferences" Condition="'$(MSBuildVersion)' &gt;= '16.0' and $([MSBuild]::IsOsPlatform('OSX'))">
		<!--
				VS4Mac seems to process System.Memory differently, and removes
				the System.Memory local reference if the package is transitively referenced.
				We remove the Reference added by the nuget targets so that ResolveAssemblyReferences
				is properly adding the local System.Memory to the Reference item group.
		-->
		<ItemGroup>
			<_ReferenceToRemove Include="@(Reference)" Condition="'%(Reference.Identity)'=='System.Memory'" />
			<Reference Remove="@(_ReferenceToRemove)" />
		</ItemGroup>
	</Target>

	<Target Name="VS16_RemoveSystemMemory" BeforeTargets="FindReferenceAssembliesForReferences" Condition="'$(MSBuildVersion)' &gt;= '16.0' and ($(IsMonoAndroid) or $(IsXamarinIOS) or $(IsXamarinMac))">
		<ItemGroup>
			<_ReferencePathToRemove Include="@(ReferencePath)" Condition="'%(ReferencePath.NuGetPackageId)'=='System.Memory'" />
			<ReferencePath Remove="@(_ReferencePathToRemove)" />
		</ItemGroup>
	</Target>
</Project>
